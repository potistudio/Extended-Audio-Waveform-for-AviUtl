
--track0: 始点, -2000, 2000, -400
--track1: 終点, -2000, 2000, 400
--track2: 波形高さ, 0, 1000, 100

--dialog: Offset, local offset=0;

-------- Import rikky_module --------
package.cpath = package.cpath .. ";" .. obj.getinfo ("script_path"):match ("(.*\\).*\\") .. "?.dll"
local bool, rikky_module = pcall (require, "rikky_module")

if not bool then
	obj.load ("<s100>require rikky_module!")
	obj.draw()

	return
end

-------- Pre --------
obj.setfont ("MS UI Gothic", 50, 0, 0xffffff)
obj.setoption ("drawtarget", "tempbuffer", obj.screen_w, obj.screen_h)

-------- Main --------
local startPoint = obj.track0
local endPoint = obj.track1
local waveformHeightMultiplier = obj.track2 * 0.00005

local currentFrame, totalFrame = rikky_module.getinfo ("frame")
local mergedWaveformBuffer = {}

local function remap (x, in_min, in_max, out_min, out_max)
	return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min
end

for i = 1, 16 do
	local waveform = rikky_module.audiobuffer (currentFrame + (i - 1), "PCM", "absolute", "monaural", 4096, 0)

	for j = 1, #waveform do
		mergedWaveformBuffer[#mergedWaveformBuffer + 1] = waveform[j]
	end
end

-------- Draw --------
obj.load ("figure", "円", 0xffffff, 8)

for i = 1, #mergedWaveformBuffer do
	local x = remap (i / #mergedWaveformBuffer, 0, 1, startPoint, endPoint)
	obj.draw (x, mergedWaveformBuffer[i] * waveformHeightMultiplier)
end

-------- Post --------
obj.load ("tempbuffer")
obj.effect()
